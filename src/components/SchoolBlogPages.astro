

    <nav class="flex justify-center items-center space-x-2" id="pages_area">
        <button class="w-10 h-10 flex items-center justify-center bg-gray-200 text-gray-700 rounded-full hover:bg-gray-300 transition-colors duration-200">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
            </svg>
        </button>
        <button class="w-10 h-10 flex items-center justify-center bg-[#4b6496] text-white rounded-full hover:bg-indigo-700 transition-colors duration-200">1</button>
        <button class="w-10 h-10 flex items-center justify-center bg-gray-200 text-gray-700 rounded-full hover:bg-gray-300 transition-colors duration-200">2</button>
        <button class="w-10 h-10 flex items-center justify-center bg-gray-200 text-gray-700 rounded-full hover:bg-gray-300 transition-colors duration-200">3</button>
        <span class="text-gray-600">...</span>
        <button class="w-10 h-10 flex items-center justify-center bg-gray-200 text-gray-700 rounded-full hover:bg-gray-300 transition-colors duration-200">10</button>
        <button class="w-10 h-10 flex items-center justify-center bg-gray-200 text-gray-700 rounded-full hover:bg-gray-300 transition-colors duration-200">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
        </button>
    </nav>

<script>
    const urlString = window.location.href;
const url = new URL(urlString);
const params = new URLSearchParams(url.search);
const page_id = parseInt(params.get("page")) || 1; // За замовчуванням сторінка 1, якщо параметр відсутній
    
const response = await fetch('https://raw.githubusercontent.com/gymnasium201-kyiv/news-storage/refs/heads/main/storage_info.json');
const json = await response.json();
const all_pages = Math.ceil(json['posts'].length / 9);
const pages_area = document.getElementById("pages_area");

// Очищаємо існуючий вміст, щоб уникнути дублювання
pages_area.innerHTML = '';

// Кнопка "назад"
if (page_id > 1)
{
    pages_area.innerHTML += `
<a href="${'?page=' + (page_id - 1)}" class="w-10 h-10 flex items-center justify-center bg-gray-200 text-gray-700 rounded-full hover:bg-gray-300 transition-colors duration-200"
${page_id <= 1 ? 'disabled' : ''}>
<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
</svg>
</a>`;
}


// Додаємо кнопку першої сторінки, якщо вона не в діапазоні видимих
if (page_id > 2) {
    pages_area.innerHTML += `<a href="?page=1" class="w-10 h-10 flex items-center justify-center bg-gray-200 text-gray-700 rounded-full hover:bg-gray-300 transition-colors duration-200">1</a>`;
}

// Додаємо еліпси, якщо поточна сторінка далеко від початку
if (page_id > 3) {
    pages_area.innerHTML += `<span class="text-gray-600">...</span>`;
}

// Генеруємо основні кнопки навколо поточної сторінки
let start_page = Math.max(1, page_id - 1);
let end_page = Math.min(all_pages, page_id + 1);

if (page_id <= 2) {
    end_page = Math.min(all_pages, 3);
}

if (page_id >= all_pages - 1) {
    start_page = Math.max(1, all_pages - 2);
}

for (let i = start_page; i <= end_page; i++) {
    const isActive = i === page_id;
    const buttonClass = isActive
        ? 'w-10 h-10 flex items-center justify-center bg-[#4b6496] text-white rounded-full hover:bg-indigo-700 transition-colors duration-200'
        : 'w-10 h-10 flex items-center justify-center bg-gray-200 text-gray-700 rounded-full hover:bg-gray-300 transition-colors duration-200';
    pages_area.innerHTML += `<a href="?page=${i}" class="${buttonClass}">${i}</a>`;
}

// Додаємо еліпси, якщо поточна сторінка далеко від кінця
if (page_id < all_pages - 2) {
    pages_area.innerHTML += `<span class="text-gray-600">...</span>`;
}

// Додаємо кнопку останньої сторінки, якщо вона не в діапазоні видимих
if (page_id < all_pages - 1) {
    pages_area.innerHTML += `<a href="?page=${all_pages}" class="w-10 h-10 flex items-center justify-center bg-gray-200 text-gray-700 rounded-full hover:bg-gray-300 transition-colors duration-200">${all_pages}</a>`;
}

// Кнопка "вперед"
if (page_id < all_pages)
{
    pages_area.innerHTML += `
<a href="${'?page=' + (page_id + 1)}" class="w-10 h-10 flex items-center justify-center bg-gray-200 text-gray-700 rounded-full hover:bg-gray-300 transition-colors duration-200"
${page_id >= all_pages ? 'disabled' : ''}>
<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
</svg>
</a>`;
}



function changePage(page) {
    if (page > 0 && page <= all_pages) {
        window.location.href = `?page=${page}`;
    }
}
</script>

<style is:global>
    body {
        font-family: 'Inter', sans-serif;
        background-color: #f0f2f5; /* Light gray background */
    }
    .pages {
        box-sizing: border-box;
    }
    /* Custom styles for subtle gradient and shadow */
    .btn-gradient-shadow {
        background-image: linear-gradient(to bottom right, #6366f1, #4B6496); /* Purple gradient */
        box-shadow: 0 4px 10px rgba(75, 100, 150, 0.3); /* Soft shadow */
        transition: all 0.2s ease-in-out;
    }
    .btn-gradient-shadow:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 15px rgba(75, 100, 150, 0.4);
    }
    .btn-outline-hover:hover {
        background-color: #e0e7ff; /* Light blue on hover */
        color: #4f46e5; /* Darker blue text */
        border-color: #4f46e5;
    }
</style>